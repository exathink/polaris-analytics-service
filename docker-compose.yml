version: '3.1'

services:
  package-base:
    environment:
      POLARIS_TEST_DB_URL: postgres://polaris:polaris@polaris-db/polaris_test
    depends_on:
      - polaris-db

  package:
    environment:
      POLARIS_TEST_DB_URL: postgres://polaris:polaris@polaris-db/polaris_test
    depends_on:
      - polaris-db

  polaris-analytics-service:
    image: ${PACKAGE_DEPLOYABLE_IMAGE}
    build:
      dockerfile: docker/polaris-analytics-service-deploy/Dockerfile
      context: .
      args:
        PACKAGE_UWSGI_IMAGE: ${PACKAGE_UWSGI_IMAGE}
    ports:
      - "8200:8200"
      - "9193:9193"
    environment:
      ENVIRONMENT: development
      PROCESSES: 1
      AUTH_SERVICE_URL: http://polaris-services.exathink.localdev:8000
      POLARIS_DB_URL: postgres://polaris:polaris@polaris-db/polaris
    depends_on:
      - polaris-db




  loader:
      image: ${PACKAGE_BASE_IMAGE}
      volumes:
        - .:/project

      entrypoint:
        - python
        - -m
        - polaris.analytics.cli.main

      environment:
        POLARIS_DB_URL: ${POLARIS_DEV_DB_URL}
        PYTHONPATH: ${PYTHONPATH}
        PYTHONDONTWRITEBYTECODE: 1

  charts:
    image: ${PACKAGE_BASE_IMAGE}
    volumes:
      - .:/project

    entrypoint:
      - python
      - -m
      - polaris.analytics.cli.charts

    environment:
      POLARIS_DB_URL: ${POLARIS_DEV_DB_URL}
      PYTHONPATH: ${PYTHONPATH}
      PYTHONDONTWRITEBYTECODE: 1



  polaris-analytics-service-dev:
    image: ${PACKAGE_BASE_IMAGE}
    command:
      - flask
      - run
      - --host
      - "0.0.0.0"
      - --port
      - "8200"
    ports:
      - "8200:8200"
    volumes:
      - .:/project
    environment:
      FLASK_APP: polaris.analytics.service.endpoint:app
      FLASK_DEBUG: 1
      POLARIS_DB_URL: postgres://polaris:polaris@polaris-db
      AUTH_SERVICE_URL: http://polaris-services.exathink.localdev:8000
      PYTHONPATH: ${PYTHONPATH}

  polaris-analytics-service:
    image: ${PACKAGE_IMAGE}
    ports:
      - "8200:8200"
      - "9193:9193"
    environment:
      ENVIRONMENT: development
      # In dev mode, the app runs schema initialization when it starts
      # however, this will cause conflicts if uwsgi spawns multiple
      # processes, so processes must be set to 1 when the mode is development.
      PROCESSES: 1
      POLARIS_DB_URL: postgres://polaris:polaris@polaris-db/polaris
      AUTH_SERVICE_URL: http://polaris-services.exathink.localdev:8000

    depends_on:
      - polaris-db


  polaris-db:
    image: ${POLARIS_DB_IMAGE}
    environment:
      POSTGRES_USER: polaris
      POSTGRES_PASSWORD: polaris
      POSTGRES_DB: polaris
    ports:
      - "5432"


